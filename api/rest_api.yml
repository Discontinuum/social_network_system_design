openapi: 3.0.4
info:
  title: Social Network System Design
  description: API for the System Design course social network
  version: 1.0.12


tags:
  - name: post
  - name: media
  - name: feed
  - name: place
  - name: comment
  - name: user
    description: Operations about user
paths:
  /media:
    post:
      summary: Post a photo
      tags:
        - media
      requestBody:
        required: true
        content:
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: OK, return guid
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: guid of the photo
                    format: uuid
                required:
                  - guid
        '413':
          description: Photo is too large (more than 1 Mb)
        '500':
          description: Server Error
  /media/{media_guid}:
    get:
      summary: Get a photo
      tags:
        - media
      parameters:
        - name: media_guid
          in: path
          description: ID of photo to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        '404':
          description: Media not found
        '500':
          description: Server Error
  
  /post/{post_guid}:
    get:
      summary: Get a post
      tags:
        - post
      parameters:
        - name: post_guid
          in: path
          description: ID of post to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: guid of the post
                    format: uuid
                  author:
                    type: string
                    description: author's guid
                    format: uuid
                  text:
                    type: string
                    description: Text
                  media:
                    description: guids of media
                    type: array
                    items:
                      type: string
                      format: uuid
                  place:
                    type: string
                    description: guid of the place
                    format: uuid
                required:
                  - guid
                  - author
                  - text
        '404':
          description: Post not found
        '500':
          description: Server Error
    delete:
      summary: Delete a post
      tags:
        - post
      parameters:
        - name: post_guid
          in: path
          description: ID of photo to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '404':
          description: Post not found
        '500':
          description: Server Error
  /post:
    post:
      summary: Make a post
      tags:
        - post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  text:
                    type: string
                    description: Text
                  media:
                    description: guids of media
                    type: array
                    items:
                      type: string
                      format: uuid
                  place:
                    type: string
                    description: guid of the place
                    format: uuid
              required:
                - text
      responses:
        '200':
          description: OK, return guid
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: guid of the photo
                    format: uuid
                required:
                  - guid
        '404':
          description: Place or media not found
        '413':
          description: Text it too long
        '500':
          description: Server Error

  /post/comments/{post_guid}:
    get:
      summary: Get a post's comments
      tags:
        - post
        - comment
      parameters:
        - name: post_guid
          in: path
          description: ID of post to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      type: object
                      properties:
                        author:
                          type: string
                          description: author's guid
                          format: uuid
                        guid:
                          type: string
                          format: uuid
                          description: guid of comment
                        comment:
                          type: string
                          description: text of comment
                required:
                  - guid
                  - text
                  - author
        '404':
          description: Post not found
        '500':
          description: Server Error
  /comment:
    post:
      summary: Make a comment
      tags:
        - comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  comment:
                    type: string
                    description: text of comment
                  post_guid:
                    type: string
                    description: which post we comment
                    format: uuid
              required:
                - comment
                - post_guid
      responses:
        '200':
          description: OK, return guid
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: guid of the comment
                    format: uuid
                required:
                  - guid
        '404':
          description: Post not found
        '413':
          description: Text is too large
        '500':
          description: Server Error
          
  /feed/{user_guid}:
    get:
      summary: Fetch feed for user
      tags:
        - feed
      parameters:
        - name: user_guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          description: from which post to begin
          schema:
            type: integer
        - name: limit
          in: query
          description: how many posts to fetch
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                    type: object
                    properties:
                      guid:
                        type: string
                        description: guid of the post
                        format: uuid
                      author:
                        type: string
                        description: author's guid
                        format: uuid
                      text:
                        type: string
                        description: Text
                      media:
                        description: guids of media
                        type: array
                        items:
                          type: string
                          format: uuid
                      place:
                        type: string
                        description: guid of the place
                        format: uuid
                    required:
                      - guid
                      - author
                      - text
        '401':
          description: Incorrect offset or length
        '404':
          description: User not found
        '500':
          description: Server Error  

  /place:
    get:
      summary: Get places
      tags:
        - place
      parameters:
        - name: offset
          in: query
          description: from which place to begin
          schema:
            type: integer
        - name: limit
          in: query
          description: how many places to fetch
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                    type: object
                    properties:
                      guid:
                        type: string
                        description: guid of the place
                        format: uuid
                      name:
                        type: string
                        description: name of the place
                        format: uuid
                    required:
                      - guid
                      - name
        '401':
          description: Incorrect offset or length
        '500':
          description: Server Error            
          
  /place/{place_guid}:
    get:
      summary: Fetch posts for this place
      tags:
        - place
      parameters:
        - name: place_guid
          in: path
          description: ID of place
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          description: from which post to begin
          schema:
            type: integer
        - name: limit
          in: query
          description: how many posts to fetch
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                    type: object
                    properties:
                      guid:
                        type: string
                        description: guid of the post
                        format: uuid
                      author:
                        type: string
                        description: author's guid
                        format: uuid
                      text:
                        type: string
                        description: Text
                      media:
                        description: guids of media
                        type: array
                        items:
                          type: string
                          format: uuid
                      place:
                        type: string
                        description: guid of the place
                        format: uuid
                    required:
                      - guid
                      - author
                      - text
        '401':
          description: Incorrect offset or length
        '404':
          description: Place not found
        '500':
          description: Server Error          
